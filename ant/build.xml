<?xml version="1.0"?>

<project name="net.sf.mpxj" default="archive" basedir="..">

<target name="init" depends="init-props,init-dirs">
   <tstamp/>
</target>

<target name="init-props" description="Initialize properties">
   <tstamp/>

   <!-- 
   	The following two properties are only required if you want to use the xjc target.
   	From experience, it is best to put the XSD file in the root MPXJ dir rather
   	than setting a full path here and in the binding.xjb file 
    -->
   <property name="jaxb.dir" value="c:\java\jaxb-ri-2.1.4" />
   <property name="mspdi.xsd" value="Project2003-MSPDI-correct.XSD"/>

   <property name="lib.dir" value="${basedir}/lib" />
   <property name="jaxb.classpath" value="${lib.dir}/jaxb-api.jar:${lib.dir}/jaxb-impl.jar:${lib.dir}/jsr173_1.0_api.jar:${lib.dir}/activation.jar" />
   <property name="poi.classpath" value="${lib.dir}/poi-3.0.1-FINAL-20070705.jar" />
   <property name="junit.classpath" value="${basedir}/junit/junit.jar" />
   <property name="doc.dir" value="${basedir}/doc/api" />
   <property name="classes.dir" value="${basedir}/classes" />
   <property name="bak.dir" value="${basedir}/bak" />
   <property name="distribution" value="${basedir}/../mpxj.zip" />
   <property name="mspdi-schema.dir" value="/net/sf/mpxj/mspdi/schema" />
	<property name="planner-schema.dir" value="/net/sf/mpxj/planner/schema" />
</target>


<target name="init-dirs" depends="init-props" description="Initialize directories">
   <mkdir dir="${classes.dir}"/>
</target>

<target name="xjc" depends="init" description="Rebuild source generated by JAXB">
   <exec executable="${jaxb.dir}/bin/xjc.bat" dir="${basedir}">
	<arg line="-classpath ${classes.dir} -d ${basedir}/src -b ${basedir}/binding.xjb -p net.sf.mpxj.mspdi.schema ${mspdi.xsd}" />
   </exec>	
   <exec executable="${jaxb.dir}/bin/xjc.bat" dir="${basedir}">
	<arg line="-dtd -classpath ${classes.dir} -d ${basedir}/src -p net.sf.mpxj.planner.schema ${basedir}/doc/mrproject-0.6.dtd" />
   </exec>		
</target>

<target name="compile" depends="init" description="Compile Everything">
   <javac srcdir="${basedir}/src" destdir="${classes.dir}" classpath="${classpath}:${poi.classpath}:${jaxb.classpath}" debug="on">
      <!-- <compilerarg value="-Xlint"/> -->
   </javac>
</target>

<target name="document" depends="init-props" description="Generate documentation">
   <delete dir="${doc.dir}"/>
   <mkdir dir="${doc.dir}"/>
   <javadoc 
	sourcepath="${basedir}/src"
	classpath="${classpath}:${poi.classpath}:${jaxb.classpath}:${junit.classpath}"
      packagenames="net.sf.mpxj.*"
      destdir="${doc.dir}"
      verbose="no"
      access="public">
   </javadoc>
</target>

<target name="archive" depends="compile" description="Create JAR files">
   <jar jarfile="${basedir}/mpxj.jar" basedir="${classes.dir}"/>
</target>

<target name="distribute" depends="compile,archive,clean-classes" description="Create distribution">
   <zip zipfile="${distribution}">
      <zipfileset dir="${basedir}" prefix="mpxj" excludes="**/CVSROOT/*,**/CVS/*"/>
   </zip>
</target>

<target name="clean-temp" depends="init-props" description="Clean up temporary files">
   <delete dir="${bak.dir}"/>
   <delete>
      <fileset dir="${basedir}" includes="**/*~" defaultexcludes="no"/>
   </delete>
</target>

<target name="clean-classes" depends="init-props" description="Clean up class files">
   <delete dir="${classes.dir}"/>
</target>

<target name="clean" depends="init-props, clean-temp, clean-classes" description="Clean up all files">
   <delete file="${basedir}/mpxj.jar"/>
   <delete dir="${doc.dir}"/>
</target>

</project>
