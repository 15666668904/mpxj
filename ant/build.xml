<?xml version="1.0"?>

<project name="com.tapsterrock.mpx" default="archive" basedir="..">

<target name="init" depends="init-props,init-dirs">
   <tstamp/>
</target>

<target name="init-props" description="Initialize properties">
   <tstamp/>

   <!-- The following two properties are only rtequired if you want to use the xjc target -->
   <property name="jwsdp.dir" value="c:\java\jwsdp-1.4" />
   <property name="mspdi.xsd" value="c:\tapsterrock\docs\msp\project2003-mspdi-correct.xsd"/>

   <property name="lib.dir" value="${basedir}/lib" />
   <property name="jaxb.classpath" value="${lib.dir}/jaxb-api.jar:${lib.dir}/jaxb-impl.jar:${lib.dir}/jaxb-libs.jar:${lib.dir}/jax-qname.jar:${lib.dir}/namespace.jar:${lib.dir}/relaxngDatatype.jar:${lib.dir}/xsdlib.jar" />
   <property name="poi.classpath" value="${lib.dir}/jakarta-poi-2.5.jar" />
   <property name="doc.dir" value="${basedir}/doc/api" />
   <property name="jbuilder.dir" value="${basedir}/jbuilder" />
   <property name="classes.dir" value="${basedir}/classes" />
   <property name="bak.dir" value="${basedir}/bak" />
   <property name="junit.dir" value="${basedir}/junit" />
   <property name="junit.classes.dir" value="${junit.dir}/classes" />
   <property name="junit.bak.dir" value="${junit.dir}/bak" />
   <property name="examples.dir" value="${basedir}/examples" />
   <property name="examples.classes.dir" value="${examples.dir}/classes" />
   <property name="distribution" value="${basedir}/../mpxj.zip" />
   <property name="schema.dir" value="/com/tapsterrock/mspdi/schema" />
</target>


<target name="init-dirs" depends="init-props" description="Initialize directories">
   <mkdir dir="${classes.dir}"/>
   <mkdir dir="${junit.classes.dir}"/>
   <mkdir dir="${examples.classes.dir}"/>
</target>

<target name="xjc" depends="init" description="Rebuild source generated by JAXB">
   <exec executable="${jaxb.dir}/bin/xjc.bat">
	<arg line="-d ${basedir}/src -p com.tapsterrock.mspdi.schema ${mspdi.xsd}" />
   </exec>	
</target>

<target name="compile" depends="init" description="Compile Everything">
   <javac srcdir="${basedir}/src" destdir="${classes.dir}" classpath="${classpath}:${poi.classpath}:${jaxb.classpath}" debug="on" />
   <javac srcdir="${junit.dir}/src" destdir="${junit.classes.dir}" classpath="${classpath}:${classes.dir}:${junit.dir}/junit.jar" debug="on" />
   <javac srcdir="${examples.dir}" destdir="${examples.classes.dir}" classpath="${classpath}:${classes.dir}:${jaxb.classpath}" debug="on" />
   <copy file="${basedir}/src/${schema.dir}/bgm.ser" todir="${classes.dir}${schema.dir}"/>
   <copy file="${basedir}/src/${schema.dir}/jaxb.properties" todir="${classes.dir}${schema.dir}"/>
</target>

<target name="document" depends="init-props" description="Generate documentation">
   <mkdir dir="${doc.dir}"/>
   <javadoc 
	sourcepath="${basedir}/src"
	classpath="${classpath}:${poi.classpath}:${jaxb.classpath}"
      packagenames="com.tapsterrock.mpx.*,com.tapsterrock.mpp.*,com.tapsterrock.mspdi.*,com.tapsterrock.utility.*"
      destdir="${doc.dir}"
      verbose="no"
      access="public">
   </javadoc>
</target>

<target name="archive" depends="compile" description="Create JAR files">
   <jar jarfile="${basedir}/mpxj.jar" basedir="${classes.dir}"/>
   <jar jarfile="${junit.dir}/mpxjtest.jar" basedir="${junit.classes.dir}"/>
</target>

<target name="distribute" depends="compile,archive,clean-classes" description="Create distribution">
   <zip zipfile="${distribution}">
      <zipfileset dir="${basedir}" prefix="mpxj" excludes="**/CVSROOT/*,**/CVS/*"/>
   </zip>
</target>

<target name="clean-temp" depends="init-props" description="Clean up temporary files">
   <delete dir="${bak.dir}"/>
   <delete dir="${junit.bak.dir}"/>
   <delete>
      <fileset dir="${basedir}" includes="**/*~" defaultexcludes="no"/>
   </delete>
   <delete>
      <fileset dir="${jbuilder.dir}" includes="**/*.local" />
   </delete>
</target>

<target name="clean-classes" depends="init-props" description="Clean up class files">
   <delete dir="${classes.dir}"/>
   <delete dir="${junit.classes.dir}"/>
   <delete dir="${examples.classes.dir}"/>
</target>

<target name="clean" depends="init-props, clean-temp, clean-classes" description="Clean up all files">
   <delete file="${basedir}/mpxj.jar"/>
   <delete file="${junit.dir}/mpxjtest.jar"/>
   <delete dir="${doc.dir}"/>
</target>

</project>
